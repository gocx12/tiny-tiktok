// Code generated by hertz generator. DO NOT EDIT.

package main

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/gocx/tinyDouyin/biz/handler"
)

// register registers all routers.
func register(h *server.Hertz) {
	authMidware := authMidwareInit()

	h.GET("/ping", handler.Ping)	
	
	noauth := h.Group("/douyin")

	auth := h.Group("/douyin")
	auth.Use(authMidware.MiddlewareFunc()) 

	// basic apis
	auth.GET("/feed/", handler.Feed)
	auth.GET("/user/", handler.UserInfo)
	noauth.POST("/user/register/", func (ctx context.Context, c *app.RequestContext) {
		handler.Register(ctx , c)
		c.Set("type", "register")
		authMidware.LoginHandler(ctx , c)
	})
	noauth.POST("/user/login/", authMidware.LoginHandler)
	auth.POST("/publish/action/", handler.Publish)
	auth.GET("/publish/list/", handler.PublishList)

	// extra apis - I
	auth.POST("/favorite/action/", handler.FavoriteAction)
	auth.GET("/favorite/list/", handler.FavoriteList)
	auth.POST("/comment/action/", handler.CommentAction)
	auth.GET("/comment/list/", handler.CommentList)

	// extra apis - II
	auth.POST("/relation/action/", handler.RelationAction)
	auth.GET("/relation/follow/list/", handler.FollowList)
	auth.GET("/relation/follower/list/", handler.FollowerList)
	auth.GET("/relation/friend/list/", handler.FriendList)
	auth.GET("/message/chat/", handler.MessageChat)
	auth.POST("/message/action/", handler.MessageAction)
}
