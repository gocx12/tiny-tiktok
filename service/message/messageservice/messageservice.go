// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package messageservice

import (
	"context"

	"tiny-tiktok/service/message/pb/message"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DouyinMessageChatRequest     = message.DouyinMessageChatRequest
	DouyinMessageChatResponse    = message.DouyinMessageChatResponse
	DouyinRelationActionRequest  = message.DouyinRelationActionRequest
	DouyinRelationActionResponse = message.DouyinRelationActionResponse
	Message                      = message.Message

	MessageService interface {
		Chat(ctx context.Context, in *DouyinMessageChatRequest, opts ...grpc.CallOption) (*DouyinMessageChatResponse, error)
		Action(ctx context.Context, in *DouyinRelationActionRequest, opts ...grpc.CallOption) (*DouyinRelationActionResponse, error)
	}

	defaultMessageService struct {
		cli zrpc.Client
	}
)

func NewMessageService(cli zrpc.Client) MessageService {
	return &defaultMessageService{
		cli: cli,
	}
}

func (m *defaultMessageService) Chat(ctx context.Context, in *DouyinMessageChatRequest, opts ...grpc.CallOption) (*DouyinMessageChatResponse, error) {
	client := message.NewMessageServiceClient(m.cli.Conn())
	return client.Chat(ctx, in, opts...)
}

func (m *defaultMessageService) Action(ctx context.Context, in *DouyinRelationActionRequest, opts ...grpc.CallOption) (*DouyinRelationActionResponse, error) {
	client := message.NewMessageServiceClient(m.cli.Conn())
	return client.Action(ctx, in, opts...)
}
