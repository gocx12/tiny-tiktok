// Code generated by goctl. DO NOT EDIT.
// Source: favorite.proto

package userservice

import (
	"context"

	"tiny-tiktok/service/favorite/pb/favorite"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FavoriteActionReq  = favorite.FavoriteActionReq
	FavoriteActionResp = favorite.FavoriteActionResp
	FavoriteListReq    = favorite.FavoriteListReq
	FavoriteListResp   = favorite.FavoriteListResp
	User               = favorite.User
	Video              = favorite.Video

	UserService interface {
		FavoriteAction(ctx context.Context, in *FavoriteActionReq, opts ...grpc.CallOption) (*FavoriteActionResp, error)
		FavoriteList(ctx context.Context, in *FavoriteListReq, opts ...grpc.CallOption) (*FavoriteListResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) FavoriteAction(ctx context.Context, in *FavoriteActionReq, opts ...grpc.CallOption) (*FavoriteActionResp, error) {
	client := favorite.NewUserServiceClient(m.cli.Conn())
	return client.FavoriteAction(ctx, in, opts...)
}

func (m *defaultUserService) FavoriteList(ctx context.Context, in *FavoriteListReq, opts ...grpc.CallOption) (*FavoriteListResp, error) {
	client := favorite.NewUserServiceClient(m.cli.Conn())
	return client.FavoriteList(ctx, in, opts...)
}
