// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package userservice

import (
	"context"

	"tiny-tiktok/service/comment/pb/comment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment           = comment.Comment
	CommentActionReq  = comment.CommentActionReq
	CommentActionResp = comment.CommentActionResp
	CommentListReq    = comment.CommentListReq
	CommentListResp   = comment.CommentListResp
	User              = comment.User

	UserService interface {
		CommentAction(ctx context.Context, in *CommentActionReq, opts ...grpc.CallOption) (*CommentActionResp, error)
		CommentList(ctx context.Context, in *CommentListReq, opts ...grpc.CallOption) (*CommentActionResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) CommentAction(ctx context.Context, in *CommentActionReq, opts ...grpc.CallOption) (*CommentActionResp, error) {
	client := comment.NewUserServiceClient(m.cli.Conn())
	return client.CommentAction(ctx, in, opts...)
}

func (m *defaultUserService) CommentList(ctx context.Context, in *CommentListReq, opts ...grpc.CallOption) (*CommentActionResp, error) {
	client := comment.NewUserServiceClient(m.cli.Conn())
	return client.CommentList(ctx, in, opts...)
}
